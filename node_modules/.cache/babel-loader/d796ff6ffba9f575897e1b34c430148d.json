{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Diganth Rai\\\\shipping\\\\src\\\\views\\\\shippingform.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from \"react\";\n// import { MDBRow, MDBCol, MDBBtn, MDBCard } from \"mdbreact\";\n// //import { ToastContainer, toast } from \"react-toastify\";\n// //import \"react-toastify/dist/ReactToastify.css\";\n// import axios from \"axios\";\n// function ShippingForm() {\n//   const [name, setName] = useState(\"\");\n//   const [weight, setWeight] = useState(1);\n//   const [color, setColor] = useState(\"#3F51B5\");\n//   const [country, setCountry] = useState(\"11.42\");\n//   const cardStyle = {\n//    width: \"500px\",\n//     left: \"50%\",\n//     top: \"50%\",\n//      position: \"absolute\",\n//      transform: \"translate(-50%, -50%)\",\n//     padding: \"10px\",\n//    };\n//    const submitHandler =  (event) => {\n//     event.preventDefault();\n//      if (name === \"\" || weight === \"\" || color === \"\" || country === \"\") {\n//      alert(\"Please fill all the fields\");\n//      return;\n//      }\n//      event.target.className=\"was-validated\";\n//      // {\n//     //     position: \"top-right\",\n//     //     autoClose: 5000,\n//     //     hideProgressBar: false,\n//     //     closeOnClick: true,\n//     //     pauseOnHover: true,\n//     //     draggable: true,\n//     //     progress: undefined,\n//     //   });\n//     //   return;\n//   //   event.target.className += \" was-validated\";\n//    const multipliers = {\n//      Sweden: 11.42,\n//      China: 8.71,\n//       Brazil: 7.43,\n//      Australia: 1.83,\n//      };\n//     const cost = (multipliers[country] * weight).toFixed(2);\n//    const items = {\n//       name: name,\n//       weight: weight,\n//       color: color,\n//       country: country,\n//       cost: cost,\n//     };\n//   //  \n//   await axios\n//       .post(\"http://localhost:5000/create-order\", items)\n//       .then((res) => {\n//         toast.success(\"Order placed\", {\n//           position: \"top-right\",\n//           autoClose: 5000,\n//           hideProgressBar: false,\n//           closeOnClick: true,\n//           pauseOnHover: true,\n//           draggable: true,\n//           progress: undefined,\n//            });\n//       })\n//       .catch((err) => {\n//         toast.error(\"Error while creating order\", {\n//           position: \"top-right\",\n//           autoClose: 5000,\n//           hideProgressBar: false,\n//           closeOnClick: true,\n//           pauseOnHover: true,\n//           draggable: true,\n//           progress: undefined,\n//         });\n//       })\n// };\n//   //     .then((res) => {\n//   //       toast.success(\"Order placed\", {\n//   //         position: \"top-right\",\n//   //         autoClose: 5000,\n//   //         hideProgressBar: false,\n//   //         closeOnClick: true,\n//   //         pauseOnHover: true,\n//   //         draggable: true,\n//   //         progress: undefined,\n//   //       });\n//   //     })\n//   //     .catch((err) => {\n//   //       toast.error(\"Error while creating order\", {\n//   //         position: \"top-right\",\n//   //         autoClose: 5000,\n//   //         hideProgressBar: false,\n//   //         closeOnClick: true,\n//   //         pauseOnHover: true,\n//   //         draggable: true,\n//   //         progress: undefined,\n//   //       });\n//   //     });\n//   // };\n//   return (\n//     <div>\n//       <MDBCard style={cardStyle}>\n//         <form className=\"needs-validation\" noValidate onSubmit={submitHandler}>\n//           <MDBRow>\n//             <MDBCol md=\"12\" className=\"mb-3\">\n//               <label htmlFor=\"name\">Name</label>\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control\"\n//                 onChange={(event) => setName(event.target.value)}\n//                 required\n//                 id=\"name\"\n//                 value={name}\n//               />\n//             </MDBCol>\n//             <MDBCol md=\"12\" className=\"mb-3\">\n//               <label>Weight(kg)</label>\n//               <input\n//                 type=\"number\"\n//                 className=\"form-control\"\n//                 onChange={(event) => setWeight(event.target.value)}\n//                 required\n//                 value={weight}\n//                 min=\"0\"\n//               />\n//             </MDBCol>\n//             <MDBCol md=\"12\" className=\"mb-3\">\n//               <label>Box Color</label>\n//               <input\n//                 type=\"color\"\n//                 className=\"form-control\"\n//                 onChange={(event) => setColor(event.target.value)}\n//                 required\n//                 value={color}\n//               />\n//             </MDBCol>\n//             <MDBCol md=\"12\" className=\"mb-3\">\n//               <label>Destination Country</label>\n//               <select\n//                 className=\"browser-default custom-select\"\n//                 onChange={(event) => setCountry(event.target.value)}\n//                 required\n//                 value={country}\n//               >\n//                 <option value=\"Sweden\" default>\n//                   Sweden\n//                 </option>\n//                 <option value=\"China\">China</option>\n//                 <option value=\"Brazil\">Brazil</option>\n//                 <option value=\"Australia\">Australia</option>\n//               </select>\n//             </MDBCol>\n//             <MDBCol md=\"12\" className=\"mb-3\">\n//               <MDBBtn color=\"indigo\" type=\"submit\">\n//                 Save\n//               </MDBBtn>\n//             </MDBCol>\n//           </MDBRow>\n//         </form>\n//       </MDBCard>\n//     </div>\n//   );\n// }\n// export default ShippingForm;\nimport React, { useState } from \"react\";\nimport { MDBRow, MDBCol, MDBBtn, MDBCard } from \"mdbreact\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from \"axios\";\n\nfunction ShippingForm() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [weight, setWeight] = useState(1);\n  const [color, setColor] = useState(\"#3F51B5\");\n  const [country, setCountry] = useState(\"11.42\");\n  const cardStyle = {\n    width: \"500px\",\n    left: \"50%\",\n    top: \"50%\",\n    position: \"absolute\",\n    transform: \"translate(-50%, -50%)\",\n    padding: \"10px\"\n  };\n\n  const submitHandler = async event => {\n    event.preventDefault();\n\n    if (name === \"\" || weight === \"\" || color === \"\" || country === \"\") {\n      toast.error(\"Please fill all the fields\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n      return;\n    }\n\n    event.target.className += \" was-validated\";\n    const multipliers = {\n      Sweden: 11.42,\n      China: 8.71,\n      Brazil: 7.43,\n      Australia: 1.83\n    };\n    const cost = (multipliers[country] * weight).toFixed(2);\n    const items = {\n      name: name,\n      weight: weight,\n      color: color,\n      country: country,\n      cost: cost\n    };\n    await axios.post(\"http://localhost:5000/create-order\", items).then(res => {\n      toast.success(\"Order placed\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    }).catch(err => {\n      toast.error(\"Error while creating order\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MDBCard, {\n      style: cardStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"needs-validation\",\n        onSubmit: submitHandler,\n        noValidate: true,\n        children: /*#__PURE__*/_jsxDEV(MDBRow, {\n          children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n            md: \"12\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              onChange: event => setName(event.target.value),\n              required: true,\n              id: \"name\",\n              value: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n            md: \"12\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Weight(kg)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"form-control\",\n              onChange: event => setWeight(event.target.value),\n              required: true,\n              value: weight,\n              min: \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n            md: \"12\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Box Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              className: \"form-control\",\n              onChange: event => setColor(event.target.value),\n              required: true,\n              value: color\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n            md: \"12\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Destination Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"browser-default custom-select\",\n              onChange: event => setCountry(event.target.value),\n              required: true,\n              value: country,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Sweden\",\n                default: true,\n                children: \"Sweden\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"China\",\n                children: \"China\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Brazil\",\n                children: \"Brazil\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Australia\",\n                children: \"Australia\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n            md: \"12\",\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n              color: \"indigo\",\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShippingForm, \"8YTfc5+cWy042PGnCbUuRreHl5M=\");\n\n_c = ShippingForm;\nexport default ShippingForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShippingForm\");","map":{"version":3,"sources":["C:/Users/Diganth Rai/shipping/src/views/shippingform.js"],"names":["React","useState","MDBRow","MDBCol","MDBBtn","MDBCard","ToastContainer","toast","axios","ShippingForm","name","setName","weight","setWeight","color","setColor","country","setCountry","cardStyle","width","left","top","position","transform","padding","submitHandler","event","preventDefault","error","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","target","className","multipliers","Sweden","China","Brazil","Australia","cost","toFixed","items","post","then","res","success","catch","err","value"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,MAAzB,EAAiCC,OAAjC,QAAgD,UAAhD;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR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","sourcesContent":["// import React, { useState } from \"react\";\r\n// import { MDBRow, MDBCol, MDBBtn, MDBCard } from \"mdbreact\";\r\n// //import { ToastContainer, toast } from \"react-toastify\";\r\n// //import \"react-toastify/dist/ReactToastify.css\";\r\n// import axios from \"axios\";\r\n\r\n// function ShippingForm() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [weight, setWeight] = useState(1);\r\n//   const [color, setColor] = useState(\"#3F51B5\");\r\n//   const [country, setCountry] = useState(\"11.42\");\r\n\r\n//   const cardStyle = {\r\n//    width: \"500px\",\r\n//     left: \"50%\",\r\n//     top: \"50%\",\r\n//      position: \"absolute\",\r\n//      transform: \"translate(-50%, -50%)\",\r\n//     padding: \"10px\",\r\n//    };\r\n\r\n//    const submitHandler =  (event) => {\r\n//     event.preventDefault();\r\n\r\n//      if (name === \"\" || weight === \"\" || color === \"\" || country === \"\") {\r\n//      alert(\"Please fill all the fields\");\r\n//      return;\r\n//      }\r\n\r\n//      event.target.className=\"was-validated\";\r\n    \r\n//      // {\r\n//     //     position: \"top-right\",\r\n//     //     autoClose: 5000,\r\n//     //     hideProgressBar: false,\r\n//     //     closeOnClick: true,\r\n//     //     pauseOnHover: true,\r\n//     //     draggable: true,\r\n//     //     progress: undefined,\r\n//     //   });\r\n//     //   return;\r\n    \r\n\r\n//   //   event.target.className += \" was-validated\";\r\n\r\n//    const multipliers = {\r\n//      Sweden: 11.42,\r\n//      China: 8.71,\r\n//       Brazil: 7.43,\r\n//      Australia: 1.83,\r\n//      };\r\n  \r\n//     const cost = (multipliers[country] * weight).toFixed(2);\r\n   \r\n\r\n//    const items = {\r\n//       name: name,\r\n//       weight: weight,\r\n//       color: color,\r\n//       country: country,\r\n//       cost: cost,\r\n//     };\r\n  \r\n//   //  \r\n//   await axios\r\n//       .post(\"http://localhost:5000/create-order\", items)\r\n//       .then((res) => {\r\n//         toast.success(\"Order placed\", {\r\n//           position: \"top-right\",\r\n//           autoClose: 5000,\r\n//           hideProgressBar: false,\r\n//           closeOnClick: true,\r\n//           pauseOnHover: true,\r\n//           draggable: true,\r\n//           progress: undefined,\r\n//            });\r\n//       })\r\n//       .catch((err) => {\r\n//         toast.error(\"Error while creating order\", {\r\n//           position: \"top-right\",\r\n//           autoClose: 5000,\r\n//           hideProgressBar: false,\r\n//           closeOnClick: true,\r\n//           pauseOnHover: true,\r\n//           draggable: true,\r\n//           progress: undefined,\r\n//         });\r\n//       })\r\n// };\r\n//   //     .then((res) => {\r\n//   //       toast.success(\"Order placed\", {\r\n//   //         position: \"top-right\",\r\n//   //         autoClose: 5000,\r\n//   //         hideProgressBar: false,\r\n//   //         closeOnClick: true,\r\n//   //         pauseOnHover: true,\r\n//   //         draggable: true,\r\n//   //         progress: undefined,\r\n//   //       });\r\n//   //     })\r\n//   //     .catch((err) => {\r\n//   //       toast.error(\"Error while creating order\", {\r\n//   //         position: \"top-right\",\r\n//   //         autoClose: 5000,\r\n//   //         hideProgressBar: false,\r\n//   //         closeOnClick: true,\r\n//   //         pauseOnHover: true,\r\n//   //         draggable: true,\r\n//   //         progress: undefined,\r\n//   //       });\r\n//   //     });\r\n//   // };\r\n   \r\n//   return (\r\n//     <div>\r\n//       <MDBCard style={cardStyle}>\r\n//         <form className=\"needs-validation\" noValidate onSubmit={submitHandler}>\r\n//           <MDBRow>\r\n//             <MDBCol md=\"12\" className=\"mb-3\">\r\n//               <label htmlFor=\"name\">Name</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 className=\"form-control\"\r\n//                 onChange={(event) => setName(event.target.value)}\r\n//                 required\r\n//                 id=\"name\"\r\n//                 value={name}\r\n//               />\r\n//             </MDBCol>\r\n//             <MDBCol md=\"12\" className=\"mb-3\">\r\n//               <label>Weight(kg)</label>\r\n//               <input\r\n//                 type=\"number\"\r\n//                 className=\"form-control\"\r\n//                 onChange={(event) => setWeight(event.target.value)}\r\n//                 required\r\n//                 value={weight}\r\n//                 min=\"0\"\r\n//               />\r\n//             </MDBCol>\r\n//             <MDBCol md=\"12\" className=\"mb-3\">\r\n//               <label>Box Color</label>\r\n//               <input\r\n//                 type=\"color\"\r\n//                 className=\"form-control\"\r\n//                 onChange={(event) => setColor(event.target.value)}\r\n//                 required\r\n//                 value={color}\r\n//               />\r\n//             </MDBCol>\r\n//             <MDBCol md=\"12\" className=\"mb-3\">\r\n//               <label>Destination Country</label>\r\n//               <select\r\n//                 className=\"browser-default custom-select\"\r\n//                 onChange={(event) => setCountry(event.target.value)}\r\n//                 required\r\n//                 value={country}\r\n//               >\r\n//                 <option value=\"Sweden\" default>\r\n//                   Sweden\r\n//                 </option>\r\n//                 <option value=\"China\">China</option>\r\n//                 <option value=\"Brazil\">Brazil</option>\r\n//                 <option value=\"Australia\">Australia</option>\r\n//               </select>\r\n//             </MDBCol>\r\n//             <MDBCol md=\"12\" className=\"mb-3\">\r\n//               <MDBBtn color=\"indigo\" type=\"submit\">\r\n//                 Save\r\n//               </MDBBtn>\r\n//             </MDBCol>\r\n//           </MDBRow>\r\n//         </form>\r\n//       </MDBCard>\r\n//     </div>\r\n//   );\r\n// }\r\n// export default ShippingForm;\r\nimport React, { useState } from \"react\";\r\nimport { MDBRow, MDBCol, MDBBtn, MDBCard } from \"mdbreact\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport axios from \"axios\";\r\n\r\nfunction ShippingForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [weight, setWeight] = useState(1);\r\n  const [color, setColor] = useState(\"#3F51B5\");\r\n  const [country, setCountry] = useState(\"11.42\");\r\n\r\n  const cardStyle = {\r\n    width: \"500px\",\r\n    left: \"50%\",\r\n    top: \"50%\",\r\n    position: \"absolute\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    padding: \"10px\",\r\n  };\r\n\r\n  const submitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (name === \"\" || weight === \"\" || color === \"\" || country === \"\") {\r\n      toast.error(\"Please fill all the fields\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n\r\n    event.target.className += \" was-validated\";\r\n\r\n    const multipliers = {\r\n      Sweden: 11.42,\r\n      China: 8.71,\r\n      Brazil: 7.43,\r\n      Australia: 1.83,\r\n    };\r\n\r\n    const cost = (multipliers[country] * weight).toFixed(2);\r\n\r\n    const items = {\r\n      name: name,\r\n      weight: weight,\r\n      color: color,\r\n      country: country,\r\n      cost: cost,\r\n    };\r\n\r\n    await axios\r\n      .post(\"http://localhost:5000/create-order\", items)\r\n      .then((res) => {\r\n        toast.success(\"Order placed\", {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"Error while creating order\", {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <MDBCard style={cardStyle}>\r\n        <form className=\"needs-validation\" onSubmit={submitHandler} noValidate>\r\n          <MDBRow>\r\n            <MDBCol md=\"12\" className=\"mb-3\">\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                onChange={(event) => setName(event.target.value)}\r\n                required\r\n                id=\"name\"\r\n                value={name}\r\n              />\r\n            </MDBCol>\r\n            <MDBCol md=\"12\" className=\"mb-3\">\r\n              <label>Weight(kg)</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                onChange={(event) => setWeight(event.target.value)}\r\n                required\r\n                value={weight}\r\n                min=\"0\"\r\n              />\r\n            </MDBCol>\r\n            <MDBCol md=\"12\" className=\"mb-3\">\r\n              <label>Box Color</label>\r\n              <input\r\n                type=\"color\"\r\n                className=\"form-control\"\r\n                onChange={(event) => setColor(event.target.value)}\r\n                required\r\n                value={color}\r\n              />\r\n            </MDBCol>\r\n            <MDBCol md=\"12\" className=\"mb-3\">\r\n              <label>Destination Country</label>\r\n              <select\r\n                className=\"browser-default custom-select\"\r\n                onChange={(event) => setCountry(event.target.value)}\r\n                required\r\n                value={country}\r\n              >\r\n                <option value=\"Sweden\" default>\r\n                  Sweden\r\n                </option>\r\n                <option value=\"China\">China</option>\r\n                <option value=\"Brazil\">Brazil</option>\r\n                <option value=\"Australia\">Australia</option>\r\n              </select>\r\n            </MDBCol>\r\n            <MDBCol md=\"12\" className=\"mb-3\">\r\n              <MDBBtn color=\"indigo\" type=\"submit\">\r\n                Save\r\n              </MDBBtn>\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </form>\r\n        <ToastContainer />\r\n      </MDBCard>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShippingForm;"]},"metadata":{},"sourceType":"module"}